name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'

env:
  MONGO_URI: mongodb+srv://supercluster.d83jj.mongodb.net/superData
  MONGO_USERNAME: superuser
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}    
    
jobs:
    unit-testing:
        name: Unit Testing
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version
          uses: actions/setup-node@v4
          with:
            node-version: 20

        - name: Cache NPM dependencies
          uses: actions/cache@v4 
          with:
            path: ~/.npm
            key: '${{ runner.os }}-node-modules-${{ hashFiles(''package-lock.json'') }}'
    
        - name: Install Dependencies
          run: npm install 
    
        - name: Unit Testing
          run: npm test
          
        - name: Archive Test Result
          if: always()
          uses: actions/upload-artifact@v4
          with:
            name: Mocha-Test-Result
            path: test-results.xml

    code-coverage:
        name: code coverage
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version
          uses: actions/setup-node@v4
          with:
            node-version: 18

        - name: Install Dependencies
          run: npm install 

        - name: code coverage
          continue-on-error: true
          run: npm run coverage

        - name: Archive Test Result
          uses: actions/upload-artifact@v4
          with:
            name: Code-Coverage-Result
            path: coverage
            retention-days: 5

    docker:
        runs-on: ubuntu-latest
        needs:
        - code-coverage
        - unit-testing
        steps:
        
        - uses: actions/checkout@v4
        - uses: docker/login-action@v3
          with:
            registry: ghcr.io
            username: '${{ github.repository_owner }}'
            password: '${{ secrets.GITHUB_TOKEN }}'
        - name: Lowercase the repo name
          run: echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

        - name: docker push
          uses: docker/build-push-action@v6
          with:
            context: .
            push: true
            tags: 'ghcr.io/${{ env.REPO }}/solar-system:${{ github.sha }}'

    dev-deploy:
        needs: docker
        runs-on: ubuntu-latest
        environment:
        name: development
        outputs:
        APP_INGRESS_URL: ${{ steps.set-ingress-host-address.outputs.APP_INGRESS_HOST }}
        steps:
        - uses: actions/checkout@v4
        - uses: azure/setup-kubectl@v4
          with:
            version: 'v1.28.1'
        - run: sudo apt install linux-modules-extra-raspi && reboot
        - run: kubectl config current-context
        - uses: azure/k8s-set-context@v3
          with:
            method: kubeconfig
            kubeconfig: ${{ secrets.KUBECONFIG }}
        - run: kubectl version -o yaml

    integration-testing:
        name: integration-test
        uses: .github/workflows/reusable-workflow.yml
        with:
          ingress url: ${{ needs.dev-deploy.outputs.APP_INGRESS_URL }} 
    
    reports-s3:
      needs: [code-coverage, unit-testing]
      name: AWS S3-upload reports
      runs-on: ubuntu-latest
      continue-on-error: true
      steps:
        - name: Download Mocha Test artifact
          uses: actions/Download-artifact@v4
          with:
            name: Mocha-Test-Result

        - name: Download Code Coverage Test artifact
          uses: actions/Download-artifact@v4
          with:
            name: Code-Coverage-Result

        - name: Merge Test Files
          run: |
            ls -ltr
            mkdir reports-${{ github.sha }}
            mv cobertura-coverage.xml reports-${{ github.sha }}/
            mv test-results.xml reports-${{github.sha }}/
            ls -ltr reports-${{ github.sha }}/

        - name: upload to AWS S3
          uses: jakejarvis/s3-sync-action@master
          with:
            args: --follow-symlinks --delete
          env:
            AWS_S3_BUCKET: solar-system-test-reports
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_REGION: 'ap-south-1'
            SOURCE_DIR: 'reports-${{ github.sha }}'
            DEST_DIR: 'reports-${{ github.sha }}'    
  
    slack-notification:
       name: slack-notify
       runs-on: ubuntu-latest
       if: always()  
       needs: [code-coverage, unit-testing]
       continue-on-error: true
       steps:
         - uses: actions/checkout@v4
         - name: Slack Notification
           uses: rtCamp/action-slack-notify@v2
           env:
             SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
             SLACK_CHANNEL: githubaction2

    publishing_SNS:
       name: SNS-topic
       runs-on: ubuntu-latest
       steps:
        - name: Publish SNS notifications
          uses: akki192/aws-sns-publish-notifications@1.0.0
          with:
            SUBJECT: 'Hello'
            MESSAGE: 'this is my first try sns message'
            TOPIC_ARN: 'arn:aws:sns:[ap-south-1]:[198760341832]:[myfirstsnstopic.fifo]'
          env:
            AWS_REGION: ap-south-1
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}  -
                      


        
